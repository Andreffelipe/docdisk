"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable no-irregular-whitespace */
var style_1 = require("../../style/style");
var documentationJS = {
    basic: {
        title: "" + style_1.orange('JAVASCRIPT BÁSICO'),
        content: "\n=> " + style_1.blue('Incluindo JavaScript em uma página HTML') + "\n\n- Para incluir JavaScript dentro de uma p\u00E1gina, voc\u00EA precisa envolv\u00EA-lo em " + style_1.bgGray('<script>') + " tags:\n\n    <" + style_1.green('script') + " " + style_1.purple('type') + " = " + style_1.blueBright('"text/javascript"') + " >\n    </" + style_1.green('script') + ">\n\n- Chame um arquivo JavaScript externo\n\n    <" + style_1.green('script') + " src =" + style_1.blueBright('"myscript.js"') + ">   </" + style_1.green('script') + ">\n\n=> " + style_1.blue('Incluindo comentários') + "\n\nEm JavaScript, voc\u00EA tem duas op\u00E7\u00F5es diferentes:\n\n- Coment\u00E1rios de linha \u00FAnica\n    " + style_1.gray('// meu comentário') + "\n- Coment\u00E1rios multi-linha\n    /*\n      " + style_1.gray('meu comentário') + "\n    */\n\n=> " + style_1.blue('Declarando variáveis') + "\n\n   existem tem tr\u00EAs possibilidades diferentes para declarar uma vari\u00E1vel em JavaScript:\n\n   " + style_1.green('var') + "\n    - Ele pode ser reatribu\u00EDdo, mas apenas acessado dentro de uma fun\u00E7\u00E3o.Vari\u00E1veis \u200B\u200Bdefinidas com var movem para o topo quando o c\u00F3digo \u00E9 executado.\n   " + style_1.green('const') + "\n    - N\u00E3o podem ser reatribu\u00EDdos e n\u00E3o podem ser acessados \u200B\u200Bantes que apare\u00E7am no c\u00F3digo.\n   " + style_1.green('let') + "\n    - Semelhante a const, a  let vari\u00E1vel pode ser reatribu\u00EDda, mas n\u00E3o redeclarada.\n",
    },
    'tipos de dados': {
        title: "" + style_1.orange('Tipos de dados'),
        content: "\nAs vari\u00E1veis \u200B\u200Bpodem conter diferentes tipos de valores e tipos de dados.Voc\u00EA usa = para atribu\u00ED- los:\n\n- N\u00FAmeros\n    var age = 23\n\n- Texto(strings)\n    var a = \"init\"\n\n- Opera\u00E7\u00F5es\n    var b = 1 + 2 + 3\n\n- undefined para valores n\u00E3o atribu\u00EDdos -\n    var person = undefined\n\n- Declara\u00E7\u00F5es verdadeiras ou falsas\n    var c = true\n\n- null para valores desconhecidos\n    var x = null\n\n- Objetos\n    var name = { firstName: \"John\", lastName: \"Doe\" }\n\n- Arrays\n    var a = [\"Gustavo\", 3, false]\n\nObserve que as vari\u00E1veis \u200B\u200Bdiferenciam mai\u00FAsculas de min\u00FAsculas.Isso significa lastname e lastName ser\u00E1 tratado como duas vari\u00E1veis \u200B\u200Bdiferentes.\n      ",
    },
    objetos: {
        title: 'Objetos',
        content: "\nEle \u00E9 usado para armazenar v\u00E1rias cole\u00E7\u00F5es com chave e entidades mais complexas.\n\nvar person = {\n    primeiroNome: \"John\",\n    lastName: \"Doe\",\n    idade: 20,\n    nacionalidade: \"alem\u00E3\"\n  } ;\n\n M\u00E9todos Objetos\n\n- Object.assign()\n Copia os valores de todas as propriedades pr\u00F3prias enumer\u00E1veis \u200B\u200Bde um ou mais objetos de origem para um objeto de destino.\n\n- Object.create()\n Cria um novo objeto com o objeto e as propriedades do prot\u00F3tipo especificado.\n\n- Object.defineProperty()\n Adiciona a propriedade nomeada descrita por um determinado descritor a um objeto.\n\n- Object.defineProperties()\n Adiciona as propriedades nomeadas descritas pelos descritores fornecidos a um objeto.\n\n- Object.entries()\n Retorna uma matriz contendo todos os pares [key, value] das pr\u00F3prias propriedades de string enumer\u00E1veis \u200B\u200Bde um determinado objeto.\n\n- Object.freeze()\n Congela um objeto: outro c\u00F3digo n\u00E3o pode excluir ou alterar nenhuma propriedade.\n\n- Object.fromEntries()\n Retorna um novo objeto de um iter\u00E1vel de pares de valor-chave (reverso \u00E0 Object.entries).\n\n- Object.getOwnPropertyDescriptor()\n Retorna um descritor de propriedade para uma propriedade nomeada em um objeto.\n\n- Object.getOwnPropertyDescriptors()\n Retorna um objeto contendo todos os descritores de propriedade para um objeto.\n\n-- Object.getOwnPropertyNames()\n Retorna uma matriz contendo os nomes de todas as propriedades enumer\u00E1veis \u200B\u200Be n\u00E3o enumer\u00E1veis \u200B\u200Bdo pr\u00F3prio objeto fornecido.\n\n- Object.getOwnPropertySymbols()\n Retorna uma matriz de todas as propriedades de s\u00EDmbolo encontradas diretamente sobre um determinado objeto.\n\n-  Object.getPrototypeOf()\n Retorna o prot\u00F3tipo do objeto especificado.\n\n- Object.is()\n Compara se dois valores s\u00E3o o mesmo valor. Equivale a todos os valores de NaN (que diferem da Compara\u00E7\u00E3o de Igualdade Abstrata e da Compara\u00E7\u00E3o de Igualdade Estrita).\n\n- Object.isExtensible()\n Determina se a extens\u00E3o de um objeto \u00E9 permitida.\n\n- Object.isFrozen()\n Determina se um objeto foi congelado.\n\n- Object.isSealed()\n Determina se um objeto est\u00E1 selado.\n\n- Object.keys()\n Retorna uma matriz contendo os nomes de todas as propriedades de string enumer\u00E1veis \u200B\u200Bdo objeto fornecido.\n\n- Object.preventExtensions()\n Impede qualquer extens\u00E3o de um objeto.\n\n- Object.seal()\n Impede que outro c\u00F3digo exclua propriedades de um objeto.\n\n- Object.setPrototypeOf()\n Define o prot\u00F3tipo (isto \u00E9, a propriedade interna [[Prototype]]).\n\n- Object.values()\n Retorna uma matriz contendo os valores que correspondem a todas as propriedades de string enumer\u00E1veis \u200B\u200Bdo pr\u00F3prio objeto.\n",
    },
    array: {
        title: 'matrizes',
        content: "\n\nArrays s\u00E3o usados \u200B\u200Bpara armazenar v\u00E1rios valores em uma \u00FAnica vari\u00E1vel.\n\nvar fruta = [\n    \"Banana\",\n    \"Ma\u00E7\u00E3\",\n    \"P\u00EAra\"\n  ] ;\n\nAgora voc\u00EA tem uma matriz chamada fruit que cont\u00E9m tr\u00EAs itens que voc\u00EA pode usar para opera\u00E7\u00F5es futuras.\n\nM\u00E9todos Array\nDepois de criar matrizes, h\u00E1 algumas coisas que voc\u00EA pode fazer com elas:\n\n- concat()\n Junte v\u00E1rios arrays em um.\n\n- indexOf()\n Retorna a primeira posi\u00E7\u00E3o na qual um determinado elemento aparece em uma matriz.\n\n- join()\n Combine elementos de uma matriz em uma \u00FAnica string e retorne a string.\n\n- lastIndexOf()\n D\u00E1 a \u00FAltima posi\u00E7\u00E3o em que um determinado elemento aparece em uma matriz.\n\n- pop()\n Remove o \u00FAltimo elemento de uma matriz.\n\n- push()\n Adicione um novo elemento no final.\n\n- reverse()\n Classifique os elementos em ordem decrescente.\n\n- shift()\n Remova o primeiro elemento de uma matriz.\n\n- slice()\n Puxa uma c\u00F3pia de uma parte de uma matriz para uma nova matriz.\n\n- sort()\n Classifica os elementos em ordem alfab\u00E9tica.\n\n- splice()\n Adiciona elementos de uma forma e posi\u00E7\u00E3o especificadas.\n\n- toString()\n Converte elementos em strings.\n\n\n- unshift()\n Adiciona um novo elemento ao in\u00EDcio.\n\n- valueOf()\n Retorna o valor primitivo do objeto especificado.\n   ",
    },
    funcoes: {
        title: 'Funções',
        content: "\nAs fun\u00E7\u00F5es JavaScript s\u00E3o blocos de c\u00F3digo que executam uma determinada tarefa. Uma fun\u00E7\u00E3o b\u00E1sica \u00E9 parecida com esta:\nnome da fun\u00E7\u00E3o ( par\u00E2metro1, par\u00E2metro2, par\u00E2metro3 ) {\n    // o que a fun\u00E7\u00E3o faz\n  }\nComo voc\u00EA pode ver, consiste no function palavra chave mais um nome. Os par\u00E2metros da fun\u00E7\u00E3o est\u00E3o entre colchetes e voc\u00EA tem colchetes ao redor do que a fun\u00E7\u00E3o executa. Voc\u00EA pode criar o seu pr\u00F3prio, mas para tornar sua vida mais f\u00E1cil - tamb\u00E9m h\u00E1 uma s\u00E9rie de fun\u00E7\u00F5es padr\u00E3o.\n  ",
    },
    'saida de dados': {
        title: 'Saída de dados',
        content: "\nUma aplica\u00E7\u00E3o comum para fun\u00E7\u00F5es \u00E9 a sa\u00EDda de dados. Para a sa\u00EDda, voc\u00EA tem as seguintes op\u00E7\u00F5es:\n\n- alert()\n Dados de sa\u00EDda em uma caixa de alerta na janela do navegador\n- confirm()\n Abre uma caixa de di\u00E1logo sim / n\u00E3o e retorna verdadeiro / falso dependendo do clique do usu\u00E1rio\n- console.log()\n Grava informa\u00E7\u00F5es no console do navegador, bom para fins de depura\u00E7\u00E3o\n- document.write()\n Escreva diretamente no documento HTML\n- prompt()\n Cria um di\u00E1logo para a entrada do usu\u00E1rio",
    },
    'funcoes globais': {
        title: 'Funções Globais',
        content: "\nFun\u00E7\u00F5es globais s\u00E3o fun\u00E7\u00F5es integradas a cada navegador capaz de executar JavaScript.\n\n- decodeURI()\n Decodifica um Uniform Resource Identifier (URI) criado por encodeURIou semelhante.\n\n- decodeURIComponent()\n Decodifica um componente URI.\n\n- encodeURI()\n Codifica um URI em UTF-8.\n\n- encodeURIComponent()\n O mesmo, mas para componentes URI.\n\n- eval()\n Avalia o c\u00F3digo JavaScript representado como uma string.\n\n- isFinite()\n Determina se um valor passado \u00E9 um n\u00FAmero finito.\n\n- isNaN()\n Determina se um valor \u00E9 NaN ou n\u00E3o.\n\n- Number()\n Retorna um n\u00FAmero convertido de seu argumento.\n\n- parseFloat()\n Analisa um argumento e retorna um n\u00FAmero de ponto flutuante.\n\n- parseInt()\n Analisa seu argumento e retorna um inteiro\n ",
    },
    'loops e fluxo': {
        title: 'Loops de JavaScript e Fluxo de controle',
        content: "\n    Os loops fazem parte da maioria das linguagens de programa\u00E7\u00E3o. Eles permitem que voc\u00EA execute blocos de c\u00F3digo desejado de vezes com valores diferentes:\n\nfor - A maneira mais comum de criar um loop em JavaScript\nvaria\u00E7\u00F5es\nfor ( antes do loop; condi\u00E7\u00E3o para o loop; executar ap\u00F3s o loop ) {\n    // o que fazer durante o loop\n  }\n\nfor (variavel of iteravel) {\n  declara\u00E7\u00E3o\n}\n\nfor (variavel in objeto) {\n  declara\u00E7\u00E3o\n}\n\nwhile - Define as condi\u00E7\u00F5es sob as quais um loop \u00E9 executado\nvar obj = [1,2,3];\nvar count= 0\nwhile (count < obj.length){\nconsole.log(obj[count]); // escreve no log 1 2 3\ncount++\n};\n\nfor each...in\nNunca utiliza um loop assim com arrays. Apenas utilize em objetos.\nvar obj = {prop1: 1, prop2: 2, prop3: 3};\n\nfor each (var item in obj) {\nconsole.log(item); // escreve no log 1 2 3\n}\n\ndo while - Semelhante ao while loop, mas executa pelo menos uma vez e realiza uma verifica\u00E7\u00E3o no final para ver se a condi\u00E7\u00E3o \u00E9 atendida para executar novamente\nvar obj = [1,2,3];\nvar count= 0\ndo{\nconsole.log(obj[count]); // escreve no log 1 2 3\ncount++\n} while (count < obj.length);\n\nVoc\u00EA tem v\u00E1rios par\u00E2metros para criar loops:\nbreak \u2014Usado para parar e sair do ciclo em certas condi\u00E7\u00F5es\ncontinue - Pule partes do ciclo se certas condi\u00E7\u00F5es forem atendidas\nIf - Else Statements\nEsses tipos de declara\u00E7\u00F5es s\u00E3o f\u00E1ceis de entender. Usando-os, voc\u00EA pode definir condi\u00E7\u00F5es para quando seu c\u00F3digo \u00E9 executado. Se certas condi\u00E7\u00F5es se aplicarem, algo \u00E9 feito, se n\u00E3o - algo mais \u00E9 executado.\n\nFluxo de controle\n\nUse a instru\u00E7\u00E3o if para executar uma instru\u00E7\u00E3o se uma condi\u00E7\u00E3o l\u00F3gica for verdadeira.\nUse a cl\u00E1usula opcional else para executar uma instru\u00E7\u00E3o se a condi\u00E7\u00E3o for falsa.\nif ( condi\u00E7\u00E3o ) {\n    // o que fazer se a condi\u00E7\u00E3o for atendida\n  } else {\n    // o que fazer se a condi\u00E7\u00E3o n\u00E3o for atendida\n  }\n\nUma instru\u00E7\u00E3o switch permite que um programa avalie uma express\u00E3o e tente corresponder o valor da express\u00E3o a um r\u00F3tulo case.\nSe uma correspond\u00EAncia for encontrada, o programa executa a instru\u00E7\u00E3o associada.\nswitch (condi\u00E7\u00E3o) {\n  case 1:\n    // o que fazer se a condi\u00E7\u00E3o 1 for atendida\n    break;\n  case label_2:\n    // o que fazer se a condi\u00E7\u00E3o 2 for atendida\n    break;\n  default:\n    // o que fazer se as condi\u00E7\u00F5es n\u00E3o forem atendidas\n    break;\n}",
    },
    'caracteres de fuga': {
        title: 'Caracteres de Fuga',
        content: "\nStrings s\u00E3o o que o JavaScript chama de texto que n\u00E3o executa uma fun\u00E7\u00E3o, mas pode aparecer na tela.\n\nvar person = \"John Doe\" ;\nNesse caso, John Doe \u00E9 a string.\n\nPersonagens de Fuga\nEm JavaScript, as strings s\u00E3o marcadas com aspas simples ou duplas. Se quiser usar aspas em uma string, voc\u00EA precisar\u00E1 usar caracteres especiais:\n\n\"\\' - Cita\u00E7\u00E3o \u00FAnica\",\n\" - Cita\u00E7\u00E3o dupla\nAl\u00E9m disso, voc\u00EA tamb\u00E9m tem caracteres de escape adicionais:\n\n\\ - Barra invertida\n\b - Backspace\n\f - Form feed\n\n - Nova linha\n\r - Retorno de carro\n\t - Tabulador horizontal\n\\v - Tabulador vertical",
    },
    string: {
        title: 'Métodos de String',
        content: "\nExistem muitas maneiras diferentes de trabalhar com strings:\n\n- charAt()\n Retorna um caractere em uma posi\u00E7\u00E3o especificada dentro de uma string.\n\n- charCodeAt()\n Fornece o Unicode de um caractere nessa posi\u00E7\u00E3o.\n\n- concat()\n Concatena (junta) duas ou mais strings em uma.\n\n- fromCharCode()\n Retorna uma string criada a partir da sequ\u00EAncia especificada de unidades de c\u00F3digo UTF-16.\n\n- indexOf()\n Fornece a posi\u00E7\u00E3o da primeira ocorr\u00EAncia de um texto especificado dentro de uma string.\n\n- lastIndexOf()\n O mesmo que,  indexOf()mas com a \u00FAltima ocorr\u00EAncia, procurando para tr\u00E1s.\n\n- match()\n Recupera as correspond\u00EAncias de uma string em rela\u00E7\u00E3o a um padr\u00E3o de pesquisa.\n\n- replace()\n Encontre e substitua o texto especificado em uma string.\n\n- search()\n Executa uma pesquisa por um texto correspondente e retorna sua posi\u00E7\u00E3o.\n\n- slice()\n Extrai uma se\u00E7\u00E3o de uma string e a retorna como uma nova string.\n\n- split()\n Divide um objeto de string em uma matriz de strings em uma posi\u00E7\u00E3o especificada.\n\n- substr()\n Semelhante a, slice()mas extrai uma substring dependendo de um n\u00FAmero especificado de caracteres.\n\n- substring()\n Tamb\u00E9m semelhante a, slice()mas n\u00E3o pode aceitar \u00EDndices negativos.\n\n- toLowerCase()\n Converter strings para min\u00FAsculas.\n\n- toUpperCase()\n Converter strings para mai\u00FAsculas;\n\n- valueOf()\n Retorna o valor primitivo (que n\u00E3o tem propriedades ou m\u00E9todos) de um objeto string",
    },
    'expressao regular': {
        title: 'Sintaxe de Expressão Regular',
        content: "\nExpress\u00F5es regulares s\u00E3o padr\u00F5es de pesquisa usados \u200B\u200Bpara combinar combina\u00E7\u00F5es de caracteres em strings. O padr\u00E3o de pesquisa pode ser usado para pesquisa de texto e texto para substituir opera\u00E7\u00F5es.\n\n=> Modificadores de padr\u00E3o\n\n  e - Avaliar substitui\u00E7\u00E3o\n  i - Executar correspond\u00EAncia que n\u00E3o diferencia mai\u00FAsculas de min\u00FAsculas\n  g - Executar correspond\u00EAncia global\n  m - Executar correspond\u00EAncia de v\u00E1rias linhas\n  s - Trate as strings como uma \u00FAnica linha\n  x - Permitir coment\u00E1rios e espa\u00E7os em branco no padr\u00E3o\n  U - Padr\u00E3o desagrad\u00E1vel\n\n=> Colchetes\n\n  [abc] - Encontre qualquer um dos caracteres entre os colchetes\n  [^abc] - Encontre qualquer caractere que n\u00E3o esteja entre colchetes\n  [0-9] - Usado para encontrar qualquer d\u00EDgito de 0 a 9\n  [A-z] - Encontre qualquer caractere de A mai\u00FAsculo a z min\u00FAsculo\n  (a|b|c) - Encontre qualquer uma das alternativas separadas por |\n\n=> Metacaracteres\n\n  . - Encontre um \u00FAnico caractere, exceto nova linha ou terminador de linha\n  \\w - personagem de palavra\n  \\W - Car\u00E1ter n\u00E3o verbal\n  \\d - um d\u00EDgito\n  \\D - Um caractere sem d\u00EDgitos\n  \\s - caractere de espa\u00E7o em branco\n  \\S - Caractere sem espa\u00E7o em branco\n  \b - Encontre uma correspond\u00EAncia no in\u00EDcio / final de uma palavra\n  \\B - Uma correspond\u00EAncia que n\u00E3o est\u00E1 no in\u00EDcio / fim de uma palavra\n  \\0 - personagem NUL\n  \n - Um caractere de nova linha\n  \f - Caractere de feed de formul\u00E1rio\n  \r - Carriage Return Character\n  \t - caractere de tabula\u00E7\u00E3o\n  \\v - Tabula\u00E7\u00E3o vertical\n  \\xxx - O caractere especificado por um n\u00FAmero octal xxx\n  \\xdd - Caractere especificado por um n\u00FAmero hexadecimal dd\n  \\uxxxx - O caractere Unicode especificado por um n\u00FAmero hexadecimal XXXX\n\n=> Quantificadores\n\n  n+ - Corresponde a qualquer string que contenha pelo menos um n\n  n* - Qualquer string que contenha zero ou mais ocorr\u00EAncias de n\n  n? - Uma string que cont\u00E9m zero ou uma ocorr\u00EAncia de n\n        \"n{X} - String que cont\u00E9m uma sequ\u00EAncia de X n's\",\n        \"n{X,Y} - Strings que cont\u00EAm uma sequ\u00EAncia de X a Y n's\",\n        \"n{X,} - Corresponde a qualquer string que contenha uma sequ\u00EAncia de pelo menos X n's\",\n  n$ - Qualquer string com n no final\n  ^n - String com n no in\u00EDcio\n  ?=n - Qualquer string seguida por uma string espec\u00EDfica n\n  ?!n - String que n\u00E3o \u00E9 seguida por uma string espec\u00EDfica ni",
    },
    number: {
        title: 'Números e matemática',
        content: "\nEm JavaScript, voc\u00EA tamb\u00E9m pode trabalhar com n\u00FAmeros, constantes e realizar fun\u00E7\u00F5es matem\u00E1ticas.\n\n=> Propriedades do n\u00FAmero\n\n  MAX_VALUE - O valor num\u00E9rico m\u00E1ximo represent\u00E1vel em JavaScript\n  MIN_VALUE - Menor valor num\u00E9rico positivo represent\u00E1vel em JavaScript\n  NaN - O valor \u201CN\u00E3o \u00E9 um n\u00FAmero\u201D\n  NEGATIVE_INFINITY - O valor Infinito negativo\n  POSITIVE_INFINITY - Valor infinito positivo\n\n=> M\u00E9todos Num\u00E9ricos\n\n  toExponential() - Retorna a string com um n\u00FAmero arredondado escrito como nota\u00E7\u00E3o exponencial\n  toFixed() - Retorna a string de um n\u00FAmero com um n\u00FAmero especificado de decimais\n  toPrecision() - String de um n\u00FAmero escrito com um comprimento especificado\n  toString() - Retorna um n\u00FAmero como uma string\n  valueOf() - Retorna um n\u00FAmero como um n\u00FAmero\n\n=> Propriedades matem\u00E1ticas\n\n  E - numero de Euler\n  LN2 - O logaritmo natural de 2\n  LN10 - Logaritmo natural de 10\n  LOG2E - Logaritmo de base 2 de E\n  LOG10E - Logaritmo de base 10 de E\n  PI - O n\u00FAmero PI\n  SQRT1_2 - Raiz quadrada de 1 / 2\n  SQRT2 - A raiz quadrada de 2\n\n=> M\u00E9todos Matem\u00E1ticos\n\n  abs(x) - Retorna o valor absoluto(positivo) de x\n  acos(x) - O arco cosseno de x, em radianos\n  asin(x) - Arcseno de x, em radianos\n  atan(x) - O arco tangente de x como um valor num\u00E9rico\n  atan2(y, x) - Arco tangente do quociente de seus argumentos\n  ceil(x) - Valor de x arredondado para o n\u00FAmero inteiro mais pr\u00F3ximo\n  cos(x) - O cosseno de x(x est\u00E1 em radianos)\n  exp(x) - Valor de E x\n  floor(x) - O valor de x arredondado para o n\u00FAmero inteiro mais pr\u00F3ximo\n  log(x) - O logaritmo natural(base E) de x\n  max(x, y, z, ..., n) - Retorna o n\u00FAmero com o valor mais alto\n  min(x, y, z, ..., n) - O mesmo para o n\u00FAmero com o menor valor\n  pow(x, y) - X elevado \u00E0 pot\u00EAncia de y\n  random() - Retorna um n\u00FAmero aleat\u00F3rio entre 0 e 1\n  round(x) - O valor de x arredondado para o n\u00FAmero inteiro mais pr\u00F3ximo\n  sin(x) - O seno de x(x est\u00E1 em radianos)\n  sqrt(x) - Raiz quadrada de x\n  tan(x) - A tangente de um \u00E2ngulo",
    },
    datas: {
        title: 'datas',
        content: "\nVoc\u00EA tamb\u00E9m pode trabalhar e modificar datas e horas com JavaScript. Este \u00E9 o pr\u00F3ximo cap\u00EDtulo da folha de dicas do JavaScript.\n\n=> Defini\u00E7\u00E3o de datas\n\n  Date() - Cria um novo objeto de data com a data e hora atuais\n  Date(2017,5,21,3,23,10,0)- Crie um objeto de data personalizado. Os n\u00FAmeros representam um ano, m\u00EAs, dia, hora, minutos, segundos, milissegundos. Voc\u00EA pode omitir o que quiser, exceto um ano e um m\u00EAs.\n  Date(\"2017-06-23\") - Declara\u00E7\u00E3o de data como uma string\n  Extra\u00E7\u00E3o de valores de data e hora\n  getDate() - Obtenha o dia do m\u00EAs como um n\u00FAmero (1-31)\n  getDay() - O dia da semana como um n\u00FAmero (0-6)\n  getFullYear() - Ano como um n\u00FAmero de quatro d\u00EDgitos (aaaa)\n  getHours() - Obtenha a hora (0-23)\n  getMilliseconds() - O milissegundo (0-999)\n  getMinutes() - Obtenha o minuto (0-59)\n  getMonth() - M\u00EAs como um n\u00FAmero (0-11)\n  getSeconds() - Obtenha o segundo (0-59)\n  getTime() - Obtenha os milissegundos desde 1\u00BA de janeiro de 1970\n  getUTCDate() - O dia (data) do m\u00EAs na data especificada de acordo com a hora universal (tamb\u00E9m dispon\u00EDvel para dia, m\u00EAs, ano inteiro, horas, minutos etc.)\n  parse - Analisa uma representa\u00E7\u00E3o de string de uma data e retorna o n\u00FAmero de milissegundos desde 1\u00BA de janeiro de 1970\n  Definir parte de uma data\n  setDate() - Defina o dia como um n\u00FAmero (1-31)\n  setFullYear() - Define o ano (opcionalmente, m\u00EAs e dia)\n  setHours() - Defina a hora (0-23)\n  setMilliseconds() - Definir milissegundos (0-999)\n  setMinutes() - Define os minutos (0-59)\n  setMonth() - Defina o m\u00EAs (0-11)\n  setSeconds() - Define os segundos (0-59)\n  setTime() - Defina a hora (milissegundos desde 1 de janeiro de 1970)\n  setUTCDate() - Define o dia do m\u00EAs para uma data especificada de acordo com a hora universal (tamb\u00E9m dispon\u00EDvel para dia, m\u00EAs, ano completo, horas, minutos, etc.)\n   ",
    },
    dom: {
        title: 'Métodos DOM',
        content: "\nM\u00E9todos DOM\nO DOM \u00E9 o Document Object Model de de uma p\u00E1gina. \u00C9 o c\u00F3digo da estrutura de uma p\u00E1gina web. O JavaScript vem com muitas maneiras diferentes de criar e manipular elementos HTML (chamados de n\u00F3s).\n\n=> Propriedades do n\u00F3\nattributes - Retorna uma cole\u00E7\u00E3o ativa de todos os atributos registrados em um elemento\nbaseURI - Fornece o URL de base absoluta de um elemento HTML\nchildNodes - D\u00E1 uma cole\u00E7\u00E3o de n\u00F3s filhos de um elemento\nfirstChild - Retorna o primeiro n\u00F3 filho de um elemento\nlastChild - O \u00FAltimo n\u00F3 filho de um elemento\nnextSibling - Fornece o pr\u00F3ximo n\u00F3 no mesmo n\u00EDvel da \u00E1rvore de n\u00F3s\nnodeName \u2014Retorna o nome de um n\u00F3\nnodeType - Retorna o tipo de um n\u00F3\nnodeValue - Define ou retorna o valor de um n\u00F3\nownerDocument - O objeto de documento de n\u00EDvel superior para este n\u00F3\nparentNode - Retorna o n\u00F3 pai de um elemento\npreviousSibling - Retorna o n\u00F3 imediatamente anterior ao atual\ntextContent - Define ou retorna o conte\u00FAdo textual de um n\u00F3 e seus descendentes\n\n=> M\u00E9todos de N\u00F3\nappendChild() - Adiciona um novo n\u00F3 filho a um elemento como o \u00FAltimo n\u00F3 filho\ncloneNode() - Clona um elemento HTML\ncompareDocumentPosition() - Compara a posi\u00E7\u00E3o do documento de dois elementos\ngetFeature() - Retorna um objeto que implementa as APIs de um recurso especificado\nhasAttributes() - Retorna verdadeiro se um elemento tiver algum atributo, caso contr\u00E1rio, \u00E9 falso\nhasChildNodes() - Retorna verdadeiro se um elemento tiver qualquer n\u00F3 filho, caso contr\u00E1rio, \u00E9 falso\ninsertBefore() - Insere um novo n\u00F3 filho antes de um n\u00F3 filho existente especificado\nisDefaultNamespace() - Retorna verdadeiro se um namespaceURI especificado for o padr\u00E3o, caso contr\u00E1rio, \u00E9 falso\nisEqualNode() - Verifica se dois elementos s\u00E3o iguais\nisSameNode() - Verifica se dois elementos s\u00E3o o mesmo n\u00F3\nisSupported() - Retorna verdadeiro se um recurso especificado for compat\u00EDvel com o elemento\nlookupNamespaceURI() - Retorna o URI do namespace associado a um determinado n\u00F3\nlookupPrefix() - Retorna um DOMString contendo o prefixo para um determinado URI de namespace, se presente\nnormalize() - Une n\u00F3s de texto adjacentes e remove n\u00F3s de texto vazios em um elemento\nremoveChild() - Remove um n\u00F3 filho de um elemento\nreplaceChild() - Substitui um n\u00F3 filho em um elemento\n\n=> M\u00E9todos de Elemento\ngetAttribute() - Retorna o valor de atributo especificado de um n\u00F3 de elemento\ngetAttributeNS() - Retorna o valor da string do atributo com o namespace e nome especificados\ngetAttributeNode() - Obt\u00E9m o n\u00F3 de atributo especificado\ngetAttributeNodeNS() - Retorna o n\u00F3 de atributo para o atributo com o namespace e nome fornecidos\ngetElementsByTagName() - Fornece uma cole\u00E7\u00E3o de todos os elementos filhos com o nome de tag especificado\ngetElementsByTagNameNS() - Retorna uma cole\u00E7\u00E3o HTMLC de elementos ao vivo com um determinado nome de tag pertencente ao namespace fornecido\nhasAttribute() - Retorna verdadeiro se um elemento tiver algum atributo, caso contr\u00E1rio, \u00E9 falso\nhasAttributeNS() - Fornece um valor verdadeiro / falso indicando se o elemento atual em um determinado namespace tem o atributo especificado\nremoveAttribute() - Remove um atributo especificado de um elemento\nremoveAttributeNS() - Remove o atributo especificado de um elemento em um determinado namespace\nremoveAttributeNode() - Retira um n\u00F3 de atributo especificado e retorna o n\u00F3 removido\nsetAttribute() - Define ou altera o atributo especificado para um valor especificado\nsetAttributeNS() - Adiciona um novo atributo ou altera o valor de um atributo com o namespace e nome fornecidos\nsetAttributeNode() - Define ou altera o n\u00F3 de atributo especificado\nsetAttributeNodeNS() - Adiciona um novo n\u00F3 de atributo com namespace a um elemento\nTrabalhando com o navegador do usu\u00E1rio\nAl\u00E9m dos elementos HTML, o JavaScript tamb\u00E9m pode levar em considera\u00E7\u00E3o o navegador do usu\u00E1rio e incorporar suas propriedades ao c\u00F3digo.\n\n=> Propriedades da janela\nclosed - Verifica se uma janela foi fechada ou n\u00E3o e retorna verdadeiro ou falso\ndefaultStatus - Define ou retorna o texto padr\u00E3o na barra de status de uma janela\ndocument - Retorna o objeto do documento para a janela\nframes- Retorna todos os <iframe>elementos na janela atual\nhistory - Fornece o objeto Hist\u00F3rico para a janela\ninnerHeight - A altura interna da \u00E1rea de conte\u00FAdo de uma janela\ninnerWidth - A largura interna da \u00E1rea de conte\u00FAdo\nlength- Descubra o n\u00FAmero de  <iframe>elementos na janela\nlocation - Retorna o objeto de localiza\u00E7\u00E3o para a janela\nname - Define ou retorna o nome de uma janela\nnavigator - Retorna o objeto Navigator para a janela\nopener - Retorna uma refer\u00EAncia \u00E0 janela que criou a janela\nouterHeight - A altura externa de uma janela, incluindo barras de ferramentas / barras de rolagem\nouterWidth - A largura externa de uma janela, incluindo barras de ferramentas / barras de rolagem\npageXOffset - N\u00FAmero de pixels em que o documento atual foi rolado horizontalmente\npageYOffset - N\u00FAmero de pixels em que o documento foi rolado verticalmente\nparent - A janela principal da janela atual\nscreen - Retorna o objeto Tela para a janela\nscreenLeft - A coordenada horizontal da janela (em rela\u00E7\u00E3o \u00E0 tela)\nscreenTop - A coordenada vertical da janela\nscreenX- O mesmo, screenLeftmas necess\u00E1rio para alguns navegadores\nscreenY- O mesmo, screenTopmas necess\u00E1rio para alguns navegadores\nself - Retorna a janela atual\nstatus - Define ou retorna o texto na barra de status de uma janela\ntop - Retorna a janela superior do navegador\n\n=> M\u00E9todos de janela\nalert() - Exibe uma caixa de alerta com uma mensagem e um bot\u00E3o OK\nblur() - Remove o foco da janela atual\nclearInterval() - Limpa um temporizador definido com setInterval()\nclearTimeout() - Limpa um temporizador definido com setTimeout()\nclose() - Fecha a janela atual\nconfirm()- Exibe uma caixa de di\u00E1logo com uma mensagem e um bot\u00E3o OK e Cancelar\nfocus() - Define o foco para a janela atual\nmoveBy() - Move uma janela em rela\u00E7\u00E3o \u00E0 sua posi\u00E7\u00E3o atual\nmoveTo() - Move uma janela para uma posi\u00E7\u00E3o especificada\nopen() - Abre uma nova janela do navegador\nprint() - Imprime o conte\u00FAdo da janela atual\nprompt() - Exibe uma caixa de di\u00E1logo que solicita a entrada do visitante\nresizeBy() - redimensiona a janela pelo n\u00FAmero especificado de pixels\nresizeTo() - redimensiona a janela para uma largura e altura especificadas\nscrollBy() - Rola o documento por um n\u00FAmero especificado de pixels\nscrollTo() - Rola o documento para as coordenadas especificadas\nsetInterval() - Chama uma fun\u00E7\u00E3o ou avalia uma express\u00E3o em intervalos especificados\nsetTimeout() - Chama uma fun\u00E7\u00E3o ou avalia uma express\u00E3o ap\u00F3s um intervalo especificado\nstop() - Impede o carregamento da janela\nPropriedades da tela\navailHeight - Retorna a altura da tela (excluindo a barra de tarefas do Windows)\navailWidth - Retorna a largura da tela (excluindo a barra de tarefas do Windows)\ncolorDepth - Retorna a profundidade de bits da paleta de cores para exibir imagens\nheight - A altura total da tela\npixelDepth - A resolu\u00E7\u00E3o de cor da tela em bits por pixel\nwidth - A largura total da tela\nEventos JavaScript\nEventos s\u00E3o coisas que podem acontecer com elementos HTML e s\u00E3o executados pelo usu\u00E1rio. A linguagem de programa\u00E7\u00E3o pode ouvir esses eventos e disparar a\u00E7\u00F5es no c\u00F3digo. Nenhuma folha de dicas do JavaScript estaria completa sem eles.\n\n=> Mouse\nonclick - O evento ocorre quando o usu\u00E1rio clica em um elemento\noncontextmenu - O usu\u00E1rio clica com o bot\u00E3o direito em um elemento para abrir um menu de contexto\nondblclick - O usu\u00E1rio clica duas vezes em um elemento\nonmousedown - O usu\u00E1rio pressiona o bot\u00E3o do mouse sobre um elemento\nonmouseenter - O ponteiro se move para um elemento\nonmouseleave - O ponteiro sai de um elemento\nonmousemove - O ponteiro se move enquanto est\u00E1 sobre um elemento\nonmouseover - Quando o ponteiro \u00E9 movido para um elemento ou um de seus filhos\nonmouseout - O usu\u00E1rio move o ponteiro do mouse para fora de um elemento ou de um de seus filhos\nonmouseup - O usu\u00E1rio libera um bot\u00E3o do mouse enquanto est\u00E1 sobre um elemento\n\n=> Teclado\nonkeydown - Quando o usu\u00E1rio est\u00E1 pressionando uma tecla\nonkeypress - No momento em que o usu\u00E1rio come\u00E7a a pressionar uma tecla\nonkeyup - O usu\u00E1rio libera uma tecla\n\n=> Quadro, Arma\u00E7\u00E3o\nonabort - O carregamento de uma m\u00EDdia foi abortado\nonbeforeunload - O evento ocorre antes que o documento esteja prestes a ser descarregado\nonerror - Ocorre um erro ao carregar um arquivo externo\nonhashchange - Houve altera\u00E7\u00F5es na parte \u00E2ncora de um URL\nonload - Quando um objeto \u00E9 carregado\nonpagehide - O usu\u00E1rio sai de uma p\u00E1gina da web\nonpageshow - Quando o usu\u00E1rio navega para uma p\u00E1gina da web\nonresize - A visualiza\u00E7\u00E3o do documento \u00E9 redimensionada\nonscroll - A barra de rolagem de um elemento est\u00E1 sendo rolada\nonunload - O evento ocorre quando uma p\u00E1gina \u00E9 descarregada\n\n=> Formato\nonblur - Quando um elemento perde o foco\nonchange- O conte\u00FAdo de um elemento de formul\u00E1rio muda (para <input>, <select>e <textarea>)\nonfocus - Um elemento obt\u00E9m o foco\nonfocusin - Quando um elemento est\u00E1 prestes a obter foco\nonfocusout - O elemento est\u00E1 prestes a perder o foco\noninput - Entrada do usu\u00E1rio em um elemento\noninvalid - Um elemento \u00E9 inv\u00E1lido\nonreset - Um formul\u00E1rio \u00E9 redefinido\nonsearch- O usu\u00E1rio escreve algo em um campo de pesquisa (para <input=\"search\">)\nonselect- O usu\u00E1rio seleciona algum texto (para <input>e <textarea>)\nonsubmit - Um formul\u00E1rio \u00E9 enviado\n\n=> Arrastar\nondrag - Um elemento \u00E9 arrastado\nondragend - O usu\u00E1rio terminou de arrastar o elemento\nondragenter - O elemento arrastado entra em um destino de soltar\nondragleave - Um elemento arrastado deixa o destino de soltar\nondragover - O elemento arrastado est\u00E1 no topo do destino de soltar\nondragstart - O usu\u00E1rio come\u00E7a a arrastar um elemento\nondrop - O elemento arrastado \u00E9 solto no alvo\n\n=> Prancheta\noncopy - O usu\u00E1rio copia o conte\u00FAdo de um elemento\noncut - O usu\u00E1rio corta o conte\u00FAdo de um elemento\nonpaste - Um usu\u00E1rio cola o conte\u00FAdo em um elemento\n\n=> meios de comunica\u00E7\u00E3o\nonabort - O carregamento da m\u00EDdia foi abortado\noncanplay - O navegador pode come\u00E7ar a reproduzir m\u00EDdia (por exemplo, um arquivo tem buffer suficiente)\noncanplaythrough - O navegador pode reproduzir pela m\u00EDdia sem parar\nondurationchange - A dura\u00E7\u00E3o das mudan\u00E7as de m\u00EDdia\nonended - A m\u00EDdia chegou ao seu fim\nonerror - Acontece quando ocorre um erro ao carregar um arquivo externo\nonloadeddata - Os dados de m\u00EDdia s\u00E3o carregados\nonloadedmetadata - Metadados (como dimens\u00F5es e dura\u00E7\u00E3o) s\u00E3o carregados\nonloadstart - O navegador come\u00E7a a procurar a m\u00EDdia especificada\nonpause - A m\u00EDdia \u00E9 pausada pelo usu\u00E1rio ou automaticamente\nonplay - A m\u00EDdia foi iniciada ou n\u00E3o est\u00E1 mais em pausa\nonplaying - A m\u00EDdia est\u00E1 sendo reproduzida ap\u00F3s ter sido pausada ou interrompida para armazenamento em buffer\nonprogress - O navegador est\u00E1 baixando a m\u00EDdia\nonratechange - A velocidade de reprodu\u00E7\u00E3o da m\u00EDdia muda\nonseeked - O usu\u00E1rio terminou de mover / pular para uma nova posi\u00E7\u00E3o na m\u00EDdia\nonseeking - O usu\u00E1rio come\u00E7a a se mover / pular\nonstalled - O navegador est\u00E1 tentando carregar a m\u00EDdia, mas n\u00E3o est\u00E1 dispon\u00EDvel\nonsuspend - O navegador n\u00E3o est\u00E1 carregando m\u00EDdia intencionalmente\nontimeupdate - A posi\u00E7\u00E3o de jogo mudou (por exemplo, devido ao avan\u00E7o r\u00E1pido)\nonvolumechange - O volume da m\u00EDdia mudou (incluindo mudo)\nonwaiting - M\u00EDdia pausada, mas espera-se que seja retomada (por exemplo, armazenamento em buffer)\n\n=> Anima\u00E7\u00E3o\nanimationend - Uma anima\u00E7\u00E3o CSS est\u00E1 completa\nanimationiteration - A anima\u00E7\u00E3o CSS \u00E9 repetida\nanimationstart - A anima\u00E7\u00E3o CSS come\u00E7ou\n\n=> De outros\ntransitionend - Disparado quando uma transi\u00E7\u00E3o CSS \u00E9 conclu\u00EDda\nonmessage - Uma mensagem \u00E9 recebida atrav\u00E9s da fonte do evento\nonoffline - O navegador come\u00E7a a funcionar offline\nononline - O navegador come\u00E7a a funcionar online\nonpopstate - Quando o hist\u00F3rico da janela muda\nonshow- Um <menu>elemento \u00E9 mostrado como um menu de contexto\nonstorage - Uma \u00E1rea de armazenamento da Web \u00E9 atualizada\nontoggle- O usu\u00E1rio abre ou fecha o <details>elemento\nonwheel - A roda do mouse rola para cima ou para baixo sobre um elemento\nontouchcancel - O toque na tela \u00E9 interrompido\nontouchend - O dedo do usu\u00E1rio \u00E9 removido de uma tela de toque\nontouchmove - Um dedo \u00E9 arrastado pela tela\nontouchstart - Um dedo \u00E9 colocado na tela de toque\n\n    ",
    },
    erros: {
        title: 'Erros',
        content: "\nAo trabalhar com JavaScript, podem ocorrer diferentes erros. Existem v\u00E1rias maneiras de lidar com eles:\n\ntry - Permite definir um bloco de c\u00F3digo para testar erros\ncatch - Configure um bloco de c\u00F3digo para executar em caso de erro\nthrow - Crie mensagens de erro personalizadas em vez dos erros padr\u00E3o de JavaScript\nfinally - Permite executar o c\u00F3digo, depois de tentar e capturar, independentemente do resultado\nValores de nome de erro\nJavaScript tamb\u00E9m possui um objeto de erro embutido. Possui duas propriedades:\n\nname - Define ou retorna o nome do erro\nmessage - Define ou retorna uma mensagem de erro em uma string de\n\nA propriedade de erro pode retornar seis valores diferentes como seu nome:\n\nEvalError- Ocorreu um erro na eval()fun\u00E7\u00E3o\nRangeError - Um n\u00FAmero est\u00E1 \u201Cfora do intervalo\u201D\nReferenceError - Ocorreu uma refer\u00EAncia ilegal\nSyntaxError - Ocorreu um erro de sintaxe\nTypeError - Ocorreu um erro de tipo\nURIError- Ocorreu um encodeURI()erro\n    ",
    },
    reference: {
        title: 'referencia',
        content: "\nhttps://websitesetup.org/javascript-cheat-sheet/\nhttps://developer.mozilla.org/pt-BR/\nhttps://javascript.info/",
    },
};
exports.default = documentationJS;
